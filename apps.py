import streamlit as st
import requests
from requests.exceptions import RequestException
from PIL import Image

# API Key and URL
API_KEY = "api71-api-77fd9964-ce96-4fec-abf1-5714b8508b5f"
API_URL = "https://api.ai71.ai/v1/chat/completions"  # Ensure this URL is correct

# Function to get response from the API
def get_response(prompt):
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "tiiuae/falcon-180b",
        "messages": [
            {"role": "system", "content": "You are a medical assistant. Provide clear and accurate medical responses based on the symptoms described."},
            {"role": "user", "content": prompt}
        ]
    }
    try:
        response = requests.post(API_URL, headers=headers, json=data)
        response.raise_for_status()
        response_json = response.json()
        return response_json.get('choices', [{}])[0].get('message', {}).get('content', "No response received.")
    except RequestException as e:
        st.error(f"An error occurred: {e}")
        return "Sorry, there was an error processing your request."

# Mock function for image analysis (replace with actual model integration)
def analyze_image(image):
    # This function should use a pre-trained model to analyze the image
    # For now, it returns a mock result
    return "Mock analysis result: Image shows no signs of lung cancer, COVID-19, or pneumonia."

# Streamlit app layout
st.title("Doctor's Assistant App")

# Text input for symptoms
symptoms = st.text_area("Describe the Symptoms", help="Provide detailed information about your symptoms here.")
if st.button("Analyze Symptoms"):
    if symptoms:
        prompt = f"Analyze the following symptoms: {symptoms}"
        response = get_response(prompt)
        st.write("Analysis:")
        st.write(response)
    else:
        st.warning("Please describe the symptoms before analyzing.")

# File upload for medical image analysis
st.header("Upload Medical Image")
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])
if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image.', use_column_width=True)
    st.write("")
    st.write("Analyzing...")

    # Mock image analysis
    result = analyze_image(image)
    st.write("Analysis Result:")
    st.write(result)

# Optional: Add more user guidance or instructions
st.sidebar.header("Instructions")
st.sidebar.write(
    """
    **Welcome to the Doctor's Assistant App!**

    - **Describe the Symptoms**: Type in the symptoms you are experiencing.
    - **Analyze Symptoms**: Click the button to get an analysis of the symptoms provided.
    - **Upload Medical Image**: Upload a medical image (e.g., X-ray) for analysis.

    *Note*: The analysis is generated by an AI model and should not be used as a substitute for professional medical advice.
    """
)
